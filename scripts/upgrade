#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? language=$(ynh_app_setting_get --app=$app --key=language)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)

#REMOVEME? fpm_footprint=$(ynh_app_setting_get --app=$app --key=fpm_footprint)
#REMOVEME? fpm_free_footprint=$(ynh_app_setting_get --app=$app --key=fpm_free_footprint)
#REMOVEME? fpm_usage=$(ynh_app_setting_get --app=$app --key=fpm_usage)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If fpm_footprint doesn't exist, create it
if [ -z "$fpm_footprint" ]; then
    fpm_footprint=low
    ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
if [ -z "$fpm_free_footprint" ]; then
    fpm_free_footprint=0
    ynh_app_setting_set --app=$app --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "$fpm_usage" ]; then
    fpm_usage=low
    ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage
fi

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Deactivate cron jobs
ynh_secure_remove --file="/etc/cron.d/$app"

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Backup user contents
	mv "$install_dir" "$install_dir.old"

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"

	# Restore user contents
	cp -a "$install_dir.old/uploads/." "$install_dir/uploads/."
	cp -a "$install_dir.old/protected/runtime" "$install_dir/protected/runtime"
	cp -a "$install_dir.old/protected/config/." "$install_dir/protected/config/"
	cp -a "$install_dir.old/protected/modules/." "$install_dir/protected/modules/"
	cp -a "$install_dir.old/themes/." "$install_dir/themes/"

	# Delete old source
#REMOVEME? 	ynh_secure_remove --file="$install_dir.old"
fi

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=1

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --phpversion=$phpversion --usage=$fpm_usage --footprint=$fpm_footprint
#REMOVEME? phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# DEACTIVATE DEBUG MODE
#=================================================

ynh_replace_string --match_string="defined('YII_DEBUG') or define('YII_DEBUG', true);"\
 --replace_string="// defined('YII_DEBUG') or define('YII_DEBUG', true);"\
 --target_file="$install_dir/index.php"
ynh_replace_string --match_string="defined('YII_ENV') or define('YII_ENV', 'dev');"\
 --replace_string="// defined('YII_ENV') or define('YII_ENV', 'dev');"\
 --target_file="$install_dir/index.php"

#=================================================
# SETUP APPLICATION
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Setuping application..." --weight=1

	if [[ ! -d $install_dir/$HUMHUB_AUTH_BASIC_PATH ]]; then
		install_sso

		pushd $install_dir/protected
			php$phpversion yii module/enable auth-basic
		popd
	else
		current_version=$(cat $install_dir/$HUMHUB_AUTH_BASIC_PATH/module.json | jq -j '.version')
		if [ "$current_version" != "$HUMHUB_AUTH_BASIC_VERSION" ]; then
#REMOVEME? 			ynh_secure_remove $install_dir/$HUMHUB_AUTH_BASIC_PATH
			install_sso
		fi
	fi
fi

#=================================================
# MIGRATE DATABASE
#=================================================
ynh_script_progression --message="Migrating database..." --weight=1

chown -R $app $install_dir/

ynh_exec_as $app /usr/bin/php$phpversion $install_dir/protected/yii migrate/up --includeModuleMigrations=1 --interactive=0

#=================================================
# UPDATE MODULES
#=================================================
ynh_script_progression --message="Updating modules..." --weight=1

ynh_exec_as $app /usr/bin/php$phpversion $install_dir/protected/yii module/update-all --interactive=0

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE CRONTAB
#=================================================
ynh_script_progression --message="Upgrading crontab..." --weight=1

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/${app}"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
