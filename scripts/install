#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --weight=1

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=4

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# SETUP SQL CREDENTIALS
#=================================================

ynh_add_config --template="../conf/common.php" --destination="$final_path/protected/config/common.php"

#=================================================
# DEACTIVATE DEBUG MODE
#=================================================

ynh_replace_string --match_string="defined('YII_DEBUG') or define('YII_DEBUG', true);"\
 --replace_string="// defined('YII_DEBUG') or define('YII_DEBUG', true);"\
 --target_file="$final_path/index.php"
ynh_replace_string --match_string="defined('YII_ENV') or define('YII_ENV', 'dev');"\
 --replace_string="// defined('YII_ENV') or define('YII_ENV', 'dev');"\
 --target_file="$final_path/index.php"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

# Set right permissions for curl install
chown -R $app: $final_path

# Set the app as temporarily public for curl call
ynh_script_progression --message="Configuring SSOwat..." --weight=30
# Making the app public for curl
ynh_permission_update --permission="main" --add="visitors"
# Reload SSOwat config
yunohost app ssowatconf

# Reload NGINX
ynh_systemd_action --service_name=nginx --action=reload

# Installation with curl
ynh_script_progression --message="Finalizing installation..." --weight=2

pushd $final_path/protected
	php${YNH_PHP_VERSION} yii migrate/up --includeModuleMigrations=1 --interactive=0

	php${YNH_PHP_VERSION} yii settings/set ldap enabled '1'
	php${YNH_PHP_VERSION} yii settings/set ldap hostname 'localhost'
	php${YNH_PHP_VERSION} yii settings/set ldap port 389
	php${YNH_PHP_VERSION} yii settings/set ldap encryption ''
	php${YNH_PHP_VERSION} yii settings/set ldap username ''
	php${YNH_PHP_VERSION} yii settings/set ldap password ''
	php${YNH_PHP_VERSION} yii settings/set ldap baseDn 'ou=users,dc=yunohost,dc=org'
	php${YNH_PHP_VERSION} yii settings/set ldap loginFilter '(uid=%s)'
	php${YNH_PHP_VERSION} yii settings/set ldap userFilter 'objectClass=mailAccount'
	php${YNH_PHP_VERSION} yii settings/set ldap emailAttribute 'mail'
	php${YNH_PHP_VERSION} yii settings/set ldap usernameAttribute 'uid'
	php${YNH_PHP_VERSION} yii settings/set ldap idAttribute 'uid'
	php${YNH_PHP_VERSION} yii settings/set ldap refreshUsers '1'
	php${YNH_PHP_VERSION} yii settings/set ldap refreshUsers '1'

	php${YNH_PHP_VERSION} yii ldap/sync
	php${YNH_PHP_VERSION} yii user/make-admin ${admin}

	ynh_local_curl "/index.php?r=installer/index/go"

	local_curl_csrf "/index.php?r=installer/config/basic" \
		"ConfigBasicForm[name]=YunoHost"

	local_curl_csrf "/index.php?r=installer/config/use-case" \
		"UseCaseForm[useCase]=" \
		"UseCaseForm[useCase]=other"

	local_curl_csrf "/index.php?r=installer/config/sample-data" \
		"SampleDataForm[sampleData]=0"

	php${YNH_PHP_VERSION} yii settings/set user auth.anonymousRegistration '0'
	php${YNH_PHP_VERSION} yii settings/set user auth.allowGuestAccess '0'
	php${YNH_PHP_VERSION} yii settings/set user auth.internalUsersCanInvite '0'

popd

# Remove the public access
ynh_permission_update --permission="main" --remove="visitors"

#=================================================
# MODIFY A CONFIG FILE
#=================================================

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

### `ynh_store_file_checksum` is used to store the checksum of a file.
### That way, during the upgrade script, by using `ynh_backup_if_checksum_is_different`,
### you can make a backup of this file before modifying it again if the admin had modified it.

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/protected/config/common.php"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chown -R root: $final_path

# Remove permission to others than $app and www-data (nginx user)
chmod o-rwx $final_path
chown $app:www-data $final_path

chown -R $app $final_path/assets
chown -R $app $final_path/protected/config
chown -R $app $final_path/protected/modules
chown -R $app $final_path/protected/runtime
chown -R $app $final_path/uploads/*

#=================================================
# SETUP CRON CONFIGURATION
#=================================================

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/${app}"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=35

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=2

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
